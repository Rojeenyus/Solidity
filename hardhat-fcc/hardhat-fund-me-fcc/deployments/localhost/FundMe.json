{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "s_priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "s_addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "s_funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "s_priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xe3a8ded10e8fcc56e7c765a8627d75979e74b5014c0e32924bfc6e75308e45d1",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1019438",
    "logsBloom": "0x
    "blockHash": "0x40a88d4dc71e97c15892ff859f7523fff5acd5fe77b6e96ea182edd608463af7",
    "transactionHash": "0xe3a8ded10e8fcc56e7c765a8627d75979e74b5014c0e32924bfc6e75308e45d1",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1019438",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "43752877536ed7172479f793295e1e3d",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"s_priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"s_addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"s_funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"s_priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundMe__NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) public s_addressToAmountFunded;\\n    address[] public s_funders;\\n    address public immutable i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10**18;\\n    AggregatorV3Interface public s_priceFeed;\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundMe__NotOwner();\\n        _;\\n    }\\n\\n    constructor(address s_priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(s_priceFeedAddress);\\n    }\\n\\n    function fund() public payable {\\n        require(\\n            msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n            \\\"You need to spend more ETH!\\\"\\n        );\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n\\n    function withdraw() public payable onlyOwner {\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < s_funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n\\n    function cheaperWithdraw() public payable onlyOwner {\\n        address[] memory funders = s_funders;\\n\\n        for (\\n            uint256 funderIndex = 0;\\n            funderIndex < funders.length;\\n            funderIndex++\\n        ) {\\n            address funder = funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        (bool callSuccess, ) = payable(msg.sender).call{\\n            value: address(this).balance\\n        }(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n}\\n\",\"keccak256\":\"0xbee4f479fa2ab62ec41673e49deeec88cbd2615eca8e05fc54c4bfabd0f97c43\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// Why is this a library and not abstract?\\n// Why not an interface?\\nlibrary PriceConverter {\\n    // We could make this public, but then we'd have to deploy it\\n    function getPrice(AggregatorV3Interface priceFeed)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\n        // ETH/USD rate in 18 digit\\n        return uint256(answer * 10000000000);\\n    }\\n\\n    // 1000000000\\n    function getConversionRate(\\n        uint256 ethAmount,\\n        AggregatorV3Interface priceFeed\\n    ) internal view returns (uint256) {\\n        uint256 ethPrice = getPrice(priceFeed);\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n        return ethAmountInUsd;\\n    }\\n}\\n\",\"keccak256\":\"0xb6270c86e57bfed077355468d6a934f19843e652c7ce8ecec9cde9e72c6fbac9\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040516200129238038062001292833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c6111136200017f600039600081816101d90152818161059f015261084301526111136000f3fe60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461012f578063b60d42881461015a578063be2693f014610164578063dba6335f1461016e5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100f2575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610a67565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610ac5565b6101bf565b6040516100df9190610b0b565b60405180910390f35b6100f06101d7565b005b3480156100fe57600080fd5b5061011960048036038101906101149190610b52565b610417565b6040516101269190610b8e565b60405180910390f35b34801561013b57600080fd5b50610144610456565b6040516101519190610b0b565b60405180910390f35b610162610463565b005b61016c61059d565b005b34801561017a57600080fd5b50610183610841565b6040516101909190610b8e565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103075760006001828154811061028257610281610ba9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ff90610c07565b91505061025f565b50600067ffffffffffffffff81111561032357610322610c50565b5b6040519080825280602002602001820160405280156103515781602001602082028036833780820191505090505b5060019080519060200190610367929190610941565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161038e90610cb0565b60006040518083038185875af1925050503d80600081146103cb576040519150601f19603f3d011682016040523d82523d6000602084013e6103d0565b606091505b5050905080610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b90610d22565b60405180910390fd5b50565b6001818154811061042757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461086590919063ffffffff16565b10156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90610d8e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105319190610dae565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610622576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161065c575b5050505050905060005b81518110156107305760008282815181106106ce576106cd610ba9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072890610c07565b9150506106b0565b50600067ffffffffffffffff81111561074c5761074b610c50565b5b60405190808252806020026020018201604052801561077a5781602001602082028036833780820191505090505b5060019080519060200190610790929190610941565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107b790610cb0565b60006040518083038185875af1925050503d80600081146107f4576040519150601f19603f3d011682016040523d82523d6000602084013e6107f9565b606091505b505090508061083d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083490610d22565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610871836108a1565b90506000670de0b6b3a7640000858361088a9190610e04565b6108949190610e8d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108ea57600080fd5b505afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190610f4b565b5050509150506402540be400816109399190610fc6565b915050919050565b8280548282559060005260206000209081019282156109ba579160200282015b828111156109b95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610961565b5b5090506109c791906109cb565b5090565b5b808211156109e45760008160009055506001016109cc565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a2d610a28610a23846109e8565b610a08565b6109e8565b9050919050565b6000610a3f82610a12565b9050919050565b6000610a5182610a34565b9050919050565b610a6181610a46565b82525050565b6000602082019050610a7c6000830184610a58565b92915050565b600080fd5b6000610a92826109e8565b9050919050565b610aa281610a87565b8114610aad57600080fd5b50565b600081359050610abf81610a99565b92915050565b600060208284031215610adb57610ada610a82565b5b6000610ae984828501610ab0565b91505092915050565b6000819050919050565b610b0581610af2565b82525050565b6000602082019050610b206000830184610afc565b92915050565b610b2f81610af2565b8114610b3a57600080fd5b50565b600081359050610b4c81610b26565b92915050565b600060208284031215610b6857610b67610a82565b5b6000610b7684828501610b3d565b91505092915050565b610b8881610a87565b82525050565b6000602082019050610ba36000830184610b7f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c1282610af2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c4557610c44610bd8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c9a600083610c7f565b9150610ca582610c8a565b600082019050919050565b6000610cbb82610c8d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d0c600b83610cc5565b9150610d1782610cd6565b602082019050919050565b60006020820190508181036000830152610d3b81610cff565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d78601b83610cc5565b9150610d8382610d42565b602082019050919050565b60006020820190508181036000830152610da781610d6b565b9050919050565b6000610db982610af2565b9150610dc483610af2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df957610df8610bd8565b5b828201905092915050565b6000610e0f82610af2565b9150610e1a83610af2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5357610e52610bd8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9882610af2565b9150610ea383610af2565b925082610eb357610eb2610e5e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610edd81610ebe565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b6000819050919050565b610f1381610f00565b8114610f1e57600080fd5b50565b600081519050610f3081610f0a565b92915050565b600081519050610f4581610b26565b92915050565b600080600080600060a08688031215610f6757610f66610a82565b5b6000610f7588828901610eeb565b9550506020610f8688828901610f21565b9450506040610f9788828901610f36565b9350506060610fa888828901610f36565b9250506080610fb988828901610eeb565b9150509295509295909350565b6000610fd182610f00565b9150610fdc83610f00565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561101b5761101a610bd8565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561105857611057610bd8565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109557611094610bd8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110d2576110d1610bd8565b5b82820290509291505056fea26469706673582212206662d623701a908cb78ea1bcad1f96b75327122bdb01d5a98a0284f2c0eb0c5664736f6c63430008080033",
  "deployedBytecode": "0x60806040526004361061007b5760003560e01c80636b69a5921161004e5780636b69a5921461012f578063b60d42881461015a578063be2693f014610164578063dba6335f1461016e5761007b565b80630ec3b027146100805780631bf6132d146100ab5780633ccfd60b146100e857806354861af7146100f2575b600080fd5b34801561008c57600080fd5b50610095610199565b6040516100a29190610a67565b60405180910390f35b3480156100b757600080fd5b506100d260048036038101906100cd9190610ac5565b6101bf565b6040516100df9190610b0b565b60405180910390f35b6100f06101d7565b005b3480156100fe57600080fd5b5061011960048036038101906101149190610b52565b610417565b6040516101269190610b8e565b60405180910390f35b34801561013b57600080fd5b50610144610456565b6040516101519190610b0b565b60405180910390f35b610162610463565b005b61016c61059d565b005b34801561017a57600080fd5b50610183610841565b6040516101909190610b8e565b60405180910390f35b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006020528060005260406000206000915090505481565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461025c576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156103075760006001828154811061028257610281610ba9565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806102ff90610c07565b91505061025f565b50600067ffffffffffffffff81111561032357610322610c50565b5b6040519080825280602002602001820160405280156103515781602001602082028036833780820191505090505b5060019080519060200190610367929190610941565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161038e90610cb0565b60006040518083038185875af1925050503d80600081146103cb576040519150601f19603f3d011682016040523d82523d6000602084013e6103d0565b606091505b5050905080610414576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161040b90610d22565b60405180910390fd5b50565b6001818154811061042757600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6802b5e3af16b188000081565b6802b5e3af16b18800006104a2600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461086590919063ffffffff16565b10156104e3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104da90610d8e565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546105319190610dae565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610622576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106a657602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161065c575b5050505050905060005b81518110156107305760008282815181106106ce576106cd610ba9565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061072890610c07565b9150506106b0565b50600067ffffffffffffffff81111561074c5761074b610c50565b5b60405190808252806020026020018201604052801561077a5781602001602082028036833780820191505090505b5060019080519060200190610790929190610941565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516107b790610cb0565b60006040518083038185875af1925050503d80600081146107f4576040519150601f19603f3d011682016040523d82523d6000602084013e6107f9565b606091505b505090508061083d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083490610d22565b60405180910390fd5b5050565b7f000000000000000000000000000000000000000000000000000000000000000081565b600080610871836108a1565b90506000670de0b6b3a7640000858361088a9190610e04565b6108949190610e8d565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156108ea57600080fd5b505afa1580156108fe573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109229190610f4b565b5050509150506402540be400816109399190610fc6565b915050919050565b8280548282559060005260206000209081019282156109ba579160200282015b828111156109b95782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610961565b5b5090506109c791906109cb565b5090565b5b808211156109e45760008160009055506001016109cc565b5090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610a2d610a28610a23846109e8565b610a08565b6109e8565b9050919050565b6000610a3f82610a12565b9050919050565b6000610a5182610a34565b9050919050565b610a6181610a46565b82525050565b6000602082019050610a7c6000830184610a58565b92915050565b600080fd5b6000610a92826109e8565b9050919050565b610aa281610a87565b8114610aad57600080fd5b50565b600081359050610abf81610a99565b92915050565b600060208284031215610adb57610ada610a82565b5b6000610ae984828501610ab0565b91505092915050565b6000819050919050565b610b0581610af2565b82525050565b6000602082019050610b206000830184610afc565b92915050565b610b2f81610af2565b8114610b3a57600080fd5b50565b600081359050610b4c81610b26565b92915050565b600060208284031215610b6857610b67610a82565b5b6000610b7684828501610b3d565b91505092915050565b610b8881610a87565b82525050565b6000602082019050610ba36000830184610b7f565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610c1282610af2565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610c4557610c44610bd8565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610c9a600083610c7f565b9150610ca582610c8a565b600082019050919050565b6000610cbb82610c8d565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610d0c600b83610cc5565b9150610d1782610cd6565b602082019050919050565b60006020820190508181036000830152610d3b81610cff565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610d78601b83610cc5565b9150610d8382610d42565b602082019050919050565b60006020820190508181036000830152610da781610d6b565b9050919050565b6000610db982610af2565b9150610dc483610af2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610df957610df8610bd8565b5b828201905092915050565b6000610e0f82610af2565b9150610e1a83610af2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610e5357610e52610bd8565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e9882610af2565b9150610ea383610af2565b925082610eb357610eb2610e5e565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610edd81610ebe565b8114610ee857600080fd5b50565b600081519050610efa81610ed4565b92915050565b6000819050919050565b610f1381610f00565b8114610f1e57600080fd5b50565b600081519050610f3081610f0a565b92915050565b600081519050610f4581610b26565b92915050565b600080600080600060a08688031215610f6757610f66610a82565b5b6000610f7588828901610eeb565b9550506020610f8688828901610f21565b9450506040610f9788828901610f36565b9350506060610fa888828901610f36565b9250506080610fb988828901610eeb565b9150509295509295909350565b6000610fd182610f00565b9150610fdc83610f00565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561101b5761101a610bd8565b5b817f8000000000000000000000000000000000000000000000000000000000000000058312600084126000841316161561105857611057610bd8565b5b827f8000000000000000000000000000000000000000000000000000000000000000058212600084136000841216161561109557611094610bd8565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff05821260008412600084121616156110d2576110d1610bd8565b5b82820290509291505056fea26469706673582212206662d623701a908cb78ea1bcad1f96b75327122bdb01d5a98a0284f2c0eb0c5664736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}